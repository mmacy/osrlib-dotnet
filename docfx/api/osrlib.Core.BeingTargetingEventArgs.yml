### YamlMime:ManagedReference
items:
- uid: osrlib.Core.BeingTargetingEventArgs
  commentId: T:osrlib.Core.BeingTargetingEventArgs
  id: BeingTargetingEventArgs
  parent: osrlib.Core
  children:
  - osrlib.Core.BeingTargetingEventArgs.TargetedBeing
  - osrlib.Core.BeingTargetingEventArgs.TargetingBeing
  langs:
  - csharp
  - vb
  name: BeingTargetingEventArgs
  nameWithType: BeingTargetingEventArgs
  fullName: osrlib.Core.BeingTargetingEventArgs
  type: Class
  source:
    remote:
      path: src/osrlib.Core/GameRules/BeingTargetingEventArgs.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: BeingTargetingEventArgs
    path: GameRules/BeingTargetingEventArgs.cs
    startLine: 6
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: "\nProvides information for events in which one Being is targeting another.\nSuch events are typically fired prior to performing a <xref href=\"osrlib.Core.GameAction\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class BeingTargetingEventArgs
    content.vb: Public Class BeingTargetingEventArgs
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: osrlib.Core.BeingTargetingEventArgs.TargetingBeing
  commentId: P:osrlib.Core.BeingTargetingEventArgs.TargetingBeing
  id: TargetingBeing
  parent: osrlib.Core.BeingTargetingEventArgs
  langs:
  - csharp
  - vb
  name: TargetingBeing
  nameWithType: BeingTargetingEventArgs.TargetingBeing
  fullName: osrlib.Core.BeingTargetingEventArgs.TargetingBeing
  type: Property
  source:
    remote:
      path: src/osrlib.Core/GameRules/BeingTargetingEventArgs.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: TargetingBeing
    path: GameRules/BeingTargetingEventArgs.cs
    startLine: 11
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: "\nGets or sets the Being doing the targeting.\n"
  example: []
  syntax:
    content: public Being TargetingBeing { get; set; }
    parameters: []
    return:
      type: osrlib.Core.Being
    content.vb: Public Property TargetingBeing As Being
  overload: osrlib.Core.BeingTargetingEventArgs.TargetingBeing*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: osrlib.Core.BeingTargetingEventArgs.TargetedBeing
  commentId: P:osrlib.Core.BeingTargetingEventArgs.TargetedBeing
  id: TargetedBeing
  parent: osrlib.Core.BeingTargetingEventArgs
  langs:
  - csharp
  - vb
  name: TargetedBeing
  nameWithType: BeingTargetingEventArgs.TargetedBeing
  fullName: osrlib.Core.BeingTargetingEventArgs.TargetedBeing
  type: Property
  source:
    remote:
      path: src/osrlib.Core/GameRules/BeingTargetingEventArgs.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: TargetedBeing
    path: GameRules/BeingTargetingEventArgs.cs
    startLine: 16
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: "\nGets or sets the Being that is being targeted.\n"
  example: []
  syntax:
    content: public Being TargetedBeing { get; set; }
    parameters: []
    return:
      type: osrlib.Core.Being
    content.vb: Public Property TargetedBeing As Being
  overload: osrlib.Core.BeingTargetingEventArgs.TargetedBeing*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: osrlib.Core.GameAction
  commentId: T:osrlib.Core.GameAction
  parent: osrlib.Core
  name: GameAction
  nameWithType: GameAction
  fullName: osrlib.Core.GameAction
- uid: osrlib.Core
  commentId: N:osrlib.Core
  name: osrlib.Core
  nameWithType: osrlib.Core
  fullName: osrlib.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: osrlib.Core.BeingTargetingEventArgs.TargetingBeing*
  commentId: Overload:osrlib.Core.BeingTargetingEventArgs.TargetingBeing
  name: TargetingBeing
  nameWithType: BeingTargetingEventArgs.TargetingBeing
  fullName: osrlib.Core.BeingTargetingEventArgs.TargetingBeing
- uid: osrlib.Core.Being
  commentId: T:osrlib.Core.Being
  parent: osrlib.Core
  name: Being
  nameWithType: Being
  fullName: osrlib.Core.Being
- uid: osrlib.Core.BeingTargetingEventArgs.TargetedBeing*
  commentId: Overload:osrlib.Core.BeingTargetingEventArgs.TargetedBeing
  name: TargetedBeing
  nameWithType: BeingTargetingEventArgs.TargetedBeing
  fullName: osrlib.Core.BeingTargetingEventArgs.TargetedBeing
