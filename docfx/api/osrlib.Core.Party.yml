### YamlMime:ManagedReference
items:
- uid: osrlib.Core.Party
  commentId: T:osrlib.Core.Party
  id: Party
  parent: osrlib.Core
  children:
  - osrlib.Core.Party.AddPartyMember(osrlib.Core.Being)
  - osrlib.Core.Party.AddPartyMembers(System.Collections.Generic.IList{osrlib.Core.Being})
  - osrlib.Core.Party.ClearParty
  - osrlib.Core.Party.Defeated
  - osrlib.Core.Party.IsAlive
  - osrlib.Core.Party.LivingMembers
  - osrlib.Core.Party.Members
  - osrlib.Core.Party.RemovePartyMember(osrlib.Core.Being)
  - osrlib.Core.Party.ToString
  - osrlib.Core.Party.UserId
  langs:
  - csharp
  - vb
  name: Party
  nameWithType: Party
  fullName: osrlib.Core.Party
  type: Class
  source:
    remote:
      path: src/osrlib.Core/GameRules/Party.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: Party
    path: GameRules/Party.cs
    startLine: 11
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: "\nRepresents a collection of Beings. Two Parties are pit against each other in combat.\n"
  example: []
  syntax:
    content: public class Party
    content.vb: Public Class Party
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: osrlib.Core.Party.Defeated
  commentId: E:osrlib.Core.Party.Defeated
  id: Defeated
  parent: osrlib.Core.Party
  langs:
  - csharp
  - vb
  name: Defeated
  nameWithType: Party.Defeated
  fullName: osrlib.Core.Party.Defeated
  type: Event
  source:
    remote:
      path: src/osrlib.Core/GameRules/Party.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: Defeated
    path: GameRules/Party.cs
    startLine: 18
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: "\nEvent raised when the last living member of the party is <xref href=\"osrlib.Core.Being.Killed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public event EventHandler Defeated
    return:
      type: System.EventHandler
    content.vb: Public Event Defeated As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: osrlib.Core.Party.AddPartyMember(osrlib.Core.Being)
  commentId: M:osrlib.Core.Party.AddPartyMember(osrlib.Core.Being)
  id: AddPartyMember(osrlib.Core.Being)
  parent: osrlib.Core.Party
  langs:
  - csharp
  - vb
  name: AddPartyMember(Being)
  nameWithType: Party.AddPartyMember(Being)
  fullName: osrlib.Core.Party.AddPartyMember(osrlib.Core.Being)
  type: Method
  source:
    remote:
      path: src/osrlib.Core/GameRules/Party.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: AddPartyMember
    path: GameRules/Party.cs
    startLine: 25
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: "\nAdds the specified Being to this Party.\n"
  example: []
  syntax:
    content: public void AddPartyMember(Being being)
    parameters:
    - id: being
      type: osrlib.Core.Being
      description: The Being to add to this Party.
    content.vb: Public Sub AddPartyMember(being As Being)
  overload: osrlib.Core.Party.AddPartyMember*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: osrlib.Core.Party.AddPartyMembers(System.Collections.Generic.IList{osrlib.Core.Being})
  commentId: M:osrlib.Core.Party.AddPartyMembers(System.Collections.Generic.IList{osrlib.Core.Being})
  id: AddPartyMembers(System.Collections.Generic.IList{osrlib.Core.Being})
  parent: osrlib.Core.Party
  langs:
  - csharp
  - vb
  name: AddPartyMembers(IList<Being>)
  nameWithType: Party.AddPartyMembers(IList<Being>)
  fullName: osrlib.Core.Party.AddPartyMembers(System.Collections.Generic.IList<osrlib.Core.Being>)
  type: Method
  source:
    remote:
      path: src/osrlib.Core/GameRules/Party.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: AddPartyMembers
    path: GameRules/Party.cs
    startLine: 40
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: "\nAdds the specified <xref href=\"osrlib.Core.Being\" data-throw-if-not-resolved=\"false\"></xref>s to the Party.\n"
  example: []
  syntax:
    content: public void AddPartyMembers(IList<Being> newMembers)
    parameters:
    - id: newMembers
      type: System.Collections.Generic.IList{osrlib.Core.Being}
      description: The collection of <xref href="osrlib.Core.Being" data-throw-if-not-resolved="false"></xref>s to add.
    content.vb: Public Sub AddPartyMembers(newMembers As IList(Of Being))
  overload: osrlib.Core.Party.AddPartyMembers*
  nameWithType.vb: Party.AddPartyMembers(IList(Of Being))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: osrlib.Core.Party.AddPartyMembers(System.Collections.Generic.IList(Of osrlib.Core.Being))
  name.vb: AddPartyMembers(IList(Of Being))
- uid: osrlib.Core.Party.RemovePartyMember(osrlib.Core.Being)
  commentId: M:osrlib.Core.Party.RemovePartyMember(osrlib.Core.Being)
  id: RemovePartyMember(osrlib.Core.Being)
  parent: osrlib.Core.Party
  langs:
  - csharp
  - vb
  name: RemovePartyMember(Being)
  nameWithType: Party.RemovePartyMember(Being)
  fullName: osrlib.Core.Party.RemovePartyMember(osrlib.Core.Being)
  type: Method
  source:
    remote:
      path: src/osrlib.Core/GameRules/Party.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: RemovePartyMember
    path: GameRules/Party.cs
    startLine: 52
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: "\nRemoves the specified Being from this Party.\n"
  example: []
  syntax:
    content: public void RemovePartyMember(Being being)
    parameters:
    - id: being
      type: osrlib.Core.Being
      description: The Being to remove from this Party.
    content.vb: Public Sub RemovePartyMember(being As Being)
  overload: osrlib.Core.Party.RemovePartyMember*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: osrlib.Core.Party.ClearParty
  commentId: M:osrlib.Core.Party.ClearParty
  id: ClearParty
  parent: osrlib.Core.Party
  langs:
  - csharp
  - vb
  name: ClearParty()
  nameWithType: Party.ClearParty()
  fullName: osrlib.Core.Party.ClearParty()
  type: Method
  source:
    remote:
      path: src/osrlib.Core/GameRules/Party.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: ClearParty
    path: GameRules/Party.cs
    startLine: 66
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: "\nRemoves all Beings from this Party.\n"
  example: []
  syntax:
    content: public void ClearParty()
    content.vb: Public Sub ClearParty
  overload: osrlib.Core.Party.ClearParty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: osrlib.Core.Party.ToString
  commentId: M:osrlib.Core.Party.ToString
  id: ToString
  parent: osrlib.Core.Party
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Party.ToString()
  fullName: osrlib.Core.Party.ToString()
  type: Method
  source:
    remote:
      path: src/osrlib.Core/GameRules/Party.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: ToString
    path: GameRules/Party.cs
    startLine: 95
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: "\nGets a string representation of the Party.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A multiline list of the party members and their health status.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: osrlib.Core.Party.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: osrlib.Core.Party.UserId
  commentId: P:osrlib.Core.Party.UserId
  id: UserId
  parent: osrlib.Core.Party
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: Party.UserId
  fullName: osrlib.Core.Party.UserId
  type: Property
  source:
    remote:
      path: src/osrlib.Core/GameRules/Party.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: UserId
    path: GameRules/Party.cs
    startLine: 124
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: "\nGets or sets the owner of this party.\n"
  example: []
  syntax:
    content: public User UserId { get; set; }
    parameters: []
    return:
      type: osrlib.Core.User
    content.vb: Public Property UserId As User
  overload: osrlib.Core.Party.UserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: osrlib.Core.Party.IsAlive
  commentId: P:osrlib.Core.Party.IsAlive
  id: IsAlive
  parent: osrlib.Core.Party
  langs:
  - csharp
  - vb
  name: IsAlive
  nameWithType: Party.IsAlive
  fullName: osrlib.Core.Party.IsAlive
  type: Property
  source:
    remote:
      path: src/osrlib.Core/GameRules/Party.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: IsAlive
    path: GameRules/Party.cs
    startLine: 130
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: "\nGets whether at least one member of this Party is alive. If there are no\nBeings alive in a Party, the Party is considered dead.\n"
  example: []
  syntax:
    content: public bool IsAlive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAlive As Boolean
  overload: osrlib.Core.Party.IsAlive*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: osrlib.Core.Party.Members
  commentId: P:osrlib.Core.Party.Members
  id: Members
  parent: osrlib.Core.Party
  langs:
  - csharp
  - vb
  name: Members
  nameWithType: Party.Members
  fullName: osrlib.Core.Party.Members
  type: Property
  source:
    remote:
      path: src/osrlib.Core/GameRules/Party.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: Members
    path: GameRules/Party.cs
    startLine: 136
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: "\nGets a collection of all Beings in this party, living or otherwise.\n"
  remarks: To add or remove party members, use <xref href="osrlib.Core.Party.AddPartyMember(osrlib.Core.Being)" data-throw-if-not-resolved="false"></xref> and <xref href="osrlib.Core.Party.RemovePartyMember(osrlib.Core.Being)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public List<Being> Members { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{osrlib.Core.Being}
    content.vb: Public ReadOnly Property Members As List(Of Being)
  overload: osrlib.Core.Party.Members*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: osrlib.Core.Party.LivingMembers
  commentId: P:osrlib.Core.Party.LivingMembers
  id: LivingMembers
  parent: osrlib.Core.Party
  langs:
  - csharp
  - vb
  name: LivingMembers
  nameWithType: Party.LivingMembers
  fullName: osrlib.Core.Party.LivingMembers
  type: Property
  source:
    remote:
      path: src/osrlib.Core/GameRules/Party.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: LivingMembers
    path: GameRules/Party.cs
    startLine: 142
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: "\nGets a collection of Beings in this party that are alive.\n"
  remarks: To add or remove party members, use <xref href="osrlib.Core.Party.AddPartyMember(osrlib.Core.Being)" data-throw-if-not-resolved="false"></xref> and <xref href="osrlib.Core.Party.RemovePartyMember(osrlib.Core.Being)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ReadOnlyCollection<Being> LivingMembers { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{osrlib.Core.Being}
    content.vb: Public ReadOnly Property LivingMembers As ReadOnlyCollection(Of Being)
  overload: osrlib.Core.Party.LivingMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: osrlib.Core
  commentId: N:osrlib.Core
  name: osrlib.Core
  nameWithType: osrlib.Core
  fullName: osrlib.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: osrlib.Core.Being.Killed
  commentId: E:osrlib.Core.Being.Killed
  isExternal: true
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: osrlib.Core.Party.AddPartyMember*
  commentId: Overload:osrlib.Core.Party.AddPartyMember
  name: AddPartyMember
  nameWithType: Party.AddPartyMember
  fullName: osrlib.Core.Party.AddPartyMember
- uid: osrlib.Core.Being
  commentId: T:osrlib.Core.Being
  parent: osrlib.Core
  name: Being
  nameWithType: Being
  fullName: osrlib.Core.Being
- uid: osrlib.Core.Party.AddPartyMembers*
  commentId: Overload:osrlib.Core.Party.AddPartyMembers
  name: AddPartyMembers
  nameWithType: Party.AddPartyMembers
  fullName: osrlib.Core.Party.AddPartyMembers
- uid: System.Collections.Generic.IList{osrlib.Core.Being}
  commentId: T:System.Collections.Generic.IList{osrlib.Core.Being}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Being>
  nameWithType: IList<Being>
  fullName: System.Collections.Generic.IList<osrlib.Core.Being>
  nameWithType.vb: IList(Of Being)
  fullName.vb: System.Collections.Generic.IList(Of osrlib.Core.Being)
  name.vb: IList(Of Being)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: osrlib.Core.Being
    name: Being
    nameWithType: Being
    fullName: osrlib.Core.Being
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: osrlib.Core.Being
    name: Being
    nameWithType: Being
    fullName: osrlib.Core.Being
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: osrlib.Core.Party.RemovePartyMember*
  commentId: Overload:osrlib.Core.Party.RemovePartyMember
  name: RemovePartyMember
  nameWithType: Party.RemovePartyMember
  fullName: osrlib.Core.Party.RemovePartyMember
- uid: osrlib.Core.Party.ClearParty*
  commentId: Overload:osrlib.Core.Party.ClearParty
  name: ClearParty
  nameWithType: Party.ClearParty
  fullName: osrlib.Core.Party.ClearParty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: osrlib.Core.Party.ToString*
  commentId: Overload:osrlib.Core.Party.ToString
  name: ToString
  nameWithType: Party.ToString
  fullName: osrlib.Core.Party.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: osrlib.Core.Party.UserId*
  commentId: Overload:osrlib.Core.Party.UserId
  name: UserId
  nameWithType: Party.UserId
  fullName: osrlib.Core.Party.UserId
- uid: osrlib.Core.User
  commentId: T:osrlib.Core.User
  parent: osrlib.Core
  name: User
  nameWithType: User
  fullName: osrlib.Core.User
- uid: osrlib.Core.Party.IsAlive*
  commentId: Overload:osrlib.Core.Party.IsAlive
  name: IsAlive
  nameWithType: Party.IsAlive
  fullName: osrlib.Core.Party.IsAlive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: osrlib.Core.Party.AddPartyMember(osrlib.Core.Being)
  commentId: M:osrlib.Core.Party.AddPartyMember(osrlib.Core.Being)
  isExternal: true
- uid: osrlib.Core.Party.RemovePartyMember(osrlib.Core.Being)
  commentId: M:osrlib.Core.Party.RemovePartyMember(osrlib.Core.Being)
  isExternal: true
- uid: osrlib.Core.Party.Members*
  commentId: Overload:osrlib.Core.Party.Members
  name: Members
  nameWithType: Party.Members
  fullName: osrlib.Core.Party.Members
- uid: System.Collections.Generic.List{osrlib.Core.Being}
  commentId: T:System.Collections.Generic.List{osrlib.Core.Being}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Being>
  nameWithType: List<Being>
  fullName: System.Collections.Generic.List<osrlib.Core.Being>
  nameWithType.vb: List(Of Being)
  fullName.vb: System.Collections.Generic.List(Of osrlib.Core.Being)
  name.vb: List(Of Being)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: osrlib.Core.Being
    name: Being
    nameWithType: Being
    fullName: osrlib.Core.Being
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: osrlib.Core.Being
    name: Being
    nameWithType: Being
    fullName: osrlib.Core.Being
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: osrlib.Core.Party.LivingMembers*
  commentId: Overload:osrlib.Core.Party.LivingMembers
  name: LivingMembers
  nameWithType: Party.LivingMembers
  fullName: osrlib.Core.Party.LivingMembers
- uid: System.Collections.ObjectModel.ReadOnlyCollection{osrlib.Core.Being}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{osrlib.Core.Being}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<Being>
  nameWithType: ReadOnlyCollection<Being>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<osrlib.Core.Being>
  nameWithType.vb: ReadOnlyCollection(Of Being)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of osrlib.Core.Being)
  name.vb: ReadOnlyCollection(Of Being)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: osrlib.Core.Being
    name: Being
    nameWithType: Being
    fullName: osrlib.Core.Being
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: osrlib.Core.Being
    name: Being
    nameWithType: Being
    fullName: osrlib.Core.Being
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
