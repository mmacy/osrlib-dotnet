### YamlMime:ManagedReference
items:
- uid: osrlib.Core.AbilityType
  commentId: T:osrlib.Core.AbilityType
  id: AbilityType
  parent: osrlib.Core
  children:
  - osrlib.Core.AbilityType.Charisma
  - osrlib.Core.AbilityType.Constitution
  - osrlib.Core.AbilityType.Dexterity
  - osrlib.Core.AbilityType.Intelligence
  - osrlib.Core.AbilityType.Strength
  - osrlib.Core.AbilityType.Wisdom
  langs:
  - csharp
  - vb
  name: AbilityType
  nameWithType: AbilityType
  fullName: osrlib.Core.AbilityType
  type: Enum
  source:
    remote:
      path: src/osrlib.Core/GameRules/AbilityType.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: AbilityType
    path: GameRules/AbilityType.cs
    startLine: 5
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: "\nSpecifies the type of an Ability.\n"
  example: []
  syntax:
    content: public enum AbilityType
    content.vb: Public Enum AbilityType
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: osrlib.Core.AbilityType.Strength
  commentId: F:osrlib.Core.AbilityType.Strength
  id: Strength
  parent: osrlib.Core.AbilityType
  langs:
  - csharp
  - vb
  name: Strength
  nameWithType: AbilityType.Strength
  fullName: osrlib.Core.AbilityType.Strength
  type: Field
  source:
    remote:
      path: src/osrlib.Core/GameRules/AbilityType.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: Strength
    path: GameRules/AbilityType.cs
    startLine: 8
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: Power, force.
  example: []
  syntax:
    content: Strength = 0
    return:
      type: osrlib.Core.AbilityType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: osrlib.Core.AbilityType.Dexterity
  commentId: F:osrlib.Core.AbilityType.Dexterity
  id: Dexterity
  parent: osrlib.Core.AbilityType
  langs:
  - csharp
  - vb
  name: Dexterity
  nameWithType: AbilityType.Dexterity
  fullName: osrlib.Core.AbilityType.Dexterity
  type: Field
  source:
    remote:
      path: src/osrlib.Core/GameRules/AbilityType.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: Dexterity
    path: GameRules/AbilityType.cs
    startLine: 10
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: Nimbleness, balance.
  example: []
  syntax:
    content: Dexterity = 1
    return:
      type: osrlib.Core.AbilityType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: osrlib.Core.AbilityType.Constitution
  commentId: F:osrlib.Core.AbilityType.Constitution
  id: Constitution
  parent: osrlib.Core.AbilityType
  langs:
  - csharp
  - vb
  name: Constitution
  nameWithType: AbilityType.Constitution
  fullName: osrlib.Core.AbilityType.Constitution
  type: Field
  source:
    remote:
      path: src/osrlib.Core/GameRules/AbilityType.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: Constitution
    path: GameRules/AbilityType.cs
    startLine: 12
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: Hardiness, resilience.
  example: []
  syntax:
    content: Constitution = 2
    return:
      type: osrlib.Core.AbilityType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: osrlib.Core.AbilityType.Intelligence
  commentId: F:osrlib.Core.AbilityType.Intelligence
  id: Intelligence
  parent: osrlib.Core.AbilityType
  langs:
  - csharp
  - vb
  name: Intelligence
  nameWithType: AbilityType.Intelligence
  fullName: osrlib.Core.AbilityType.Intelligence
  type: Field
  source:
    remote:
      path: src/osrlib.Core/GameRules/AbilityType.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: Intelligence
    path: GameRules/AbilityType.cs
    startLine: 14
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: Intellectual aptitude.
  example: []
  syntax:
    content: Intelligence = 3
    return:
      type: osrlib.Core.AbilityType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: osrlib.Core.AbilityType.Wisdom
  commentId: F:osrlib.Core.AbilityType.Wisdom
  id: Wisdom
  parent: osrlib.Core.AbilityType
  langs:
  - csharp
  - vb
  name: Wisdom
  nameWithType: AbilityType.Wisdom
  fullName: osrlib.Core.AbilityType.Wisdom
  type: Field
  source:
    remote:
      path: src/osrlib.Core/GameRules/AbilityType.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: Wisdom
    path: GameRules/AbilityType.cs
    startLine: 16
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: Worldly experience, street smarts.
  example: []
  syntax:
    content: Wisdom = 4
    return:
      type: osrlib.Core.AbilityType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: osrlib.Core.AbilityType.Charisma
  commentId: F:osrlib.Core.AbilityType.Charisma
  id: Charisma
  parent: osrlib.Core.AbilityType
  langs:
  - csharp
  - vb
  name: Charisma
  nameWithType: AbilityType.Charisma
  fullName: osrlib.Core.AbilityType.Charisma
  type: Field
  source:
    remote:
      path: src/osrlib.Core/GameRules/AbilityType.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: Charisma
    path: GameRules/AbilityType.cs
    startLine: 18
  assemblies:
  - osrlib.Core
  namespace: osrlib.Core
  summary: Likeability, persuasiveness.
  example: []
  syntax:
    content: Charisma = 5
    return:
      type: osrlib.Core.AbilityType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: osrlib.Core
  commentId: N:osrlib.Core
  name: osrlib.Core
  nameWithType: osrlib.Core
  fullName: osrlib.Core
- uid: osrlib.Core.AbilityType
  commentId: T:osrlib.Core.AbilityType
  parent: osrlib.Core
  name: AbilityType
  nameWithType: AbilityType
  fullName: osrlib.Core.AbilityType
