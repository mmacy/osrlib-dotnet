### YamlMime:ManagedReference
items:
- uid: osrlib.Dice.DiceRolledEventArgs
  commentId: T:osrlib.Dice.DiceRolledEventArgs
  id: DiceRolledEventArgs
  parent: osrlib.Dice
  children:
  - osrlib.Dice.DiceRolledEventArgs.#ctor(osrlib.Dice.DiceRoll)
  - osrlib.Dice.DiceRolledEventArgs.RolledDice
  langs:
  - csharp
  - vb
  name: DiceRolledEventArgs
  nameWithType: DiceRolledEventArgs
  fullName: osrlib.Dice.DiceRolledEventArgs
  type: Class
  source:
    remote:
      path: src/osrlib.Core/Dice/DiceRolledEventArgs.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: DiceRolledEventArgs
    path: Dice/DiceRolledEventArgs.cs
    startLine: 14
  assemblies:
  - osrlib.Core
  namespace: osrlib.Dice
  summary: "\nEvent arguments for the <xref href=\"osrlib.Dice.DiceRoll.DiceRolled\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: 'public class DiceRolledEventArgs : EventArgs'
    content.vb: >-
      Public Class DiceRolledEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: osrlib.Dice.DiceRolledEventArgs.#ctor(osrlib.Dice.DiceRoll)
  commentId: M:osrlib.Dice.DiceRolledEventArgs.#ctor(osrlib.Dice.DiceRoll)
  id: '#ctor(osrlib.Dice.DiceRoll)'
  parent: osrlib.Dice.DiceRolledEventArgs
  langs:
  - csharp
  - vb
  name: DiceRolledEventArgs(DiceRoll)
  nameWithType: DiceRolledEventArgs.DiceRolledEventArgs(DiceRoll)
  fullName: osrlib.Dice.DiceRolledEventArgs.DiceRolledEventArgs(osrlib.Dice.DiceRoll)
  type: Constructor
  source:
    remote:
      path: src/osrlib.Core/Dice/DiceRolledEventArgs.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: .ctor
    path: Dice/DiceRolledEventArgs.cs
    startLine: 20
  assemblies:
  - osrlib.Core
  namespace: osrlib.Dice
  summary: "\nCreates event arguments for the specified roll.\n"
  example: []
  syntax:
    content: public DiceRolledEventArgs(DiceRoll roll)
    parameters:
    - id: roll
      type: osrlib.Dice.DiceRoll
      description: ''
    content.vb: Public Sub New(roll As DiceRoll)
  overload: osrlib.Dice.DiceRolledEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: osrlib.Dice.DiceRolledEventArgs.RolledDice
  commentId: P:osrlib.Dice.DiceRolledEventArgs.RolledDice
  id: RolledDice
  parent: osrlib.Dice.DiceRolledEventArgs
  langs:
  - csharp
  - vb
  name: RolledDice
  nameWithType: DiceRolledEventArgs.RolledDice
  fullName: osrlib.Dice.DiceRolledEventArgs.RolledDice
  type: Property
  source:
    remote:
      path: src/osrlib.Core/Dice/DiceRolledEventArgs.cs
      branch: doc-experiment-01
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: RolledDice
    path: Dice/DiceRolledEventArgs.cs
    startLine: 28
  assemblies:
  - osrlib.Core
  namespace: osrlib.Dice
  summary: "\nGets or sets the <xref href=\"osrlib.Dice.DiceRoll\" data-throw-if-not-resolved=\"false\"></xref> for the event.\n"
  example: []
  syntax:
    content: public DiceRoll RolledDice { get; }
    parameters: []
    return:
      type: osrlib.Dice.DiceRoll
    content.vb: Public ReadOnly Property RolledDice As DiceRoll
  overload: osrlib.Dice.DiceRolledEventArgs.RolledDice*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: osrlib.Dice.DiceRoll.DiceRolled
  commentId: E:osrlib.Dice.DiceRoll.DiceRolled
  isExternal: true
- uid: osrlib.Dice
  commentId: N:osrlib.Dice
  name: osrlib.Dice
  nameWithType: osrlib.Dice
  fullName: osrlib.Dice
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: osrlib.Dice.DiceRolledEventArgs.#ctor*
  commentId: Overload:osrlib.Dice.DiceRolledEventArgs.#ctor
  name: DiceRolledEventArgs
  nameWithType: DiceRolledEventArgs.DiceRolledEventArgs
  fullName: osrlib.Dice.DiceRolledEventArgs.DiceRolledEventArgs
- uid: osrlib.Dice.DiceRoll
  commentId: T:osrlib.Dice.DiceRoll
  parent: osrlib.Dice
  name: DiceRoll
  nameWithType: DiceRoll
  fullName: osrlib.Dice.DiceRoll
- uid: osrlib.Dice.DiceRolledEventArgs.RolledDice*
  commentId: Overload:osrlib.Dice.DiceRolledEventArgs.RolledDice
  name: RolledDice
  nameWithType: DiceRolledEventArgs.RolledDice
  fullName: osrlib.Dice.DiceRolledEventArgs.RolledDice
