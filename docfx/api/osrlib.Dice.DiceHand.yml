### YamlMime:ManagedReference
items:
- uid: osrlib.Dice.DiceHand
  commentId: T:osrlib.Dice.DiceHand
  id: DiceHand
  parent: osrlib.Dice
  children:
  - osrlib.Dice.DiceHand.#ctor(System.Int32,DieType)
  - osrlib.Dice.DiceHand.DieCount
  - osrlib.Dice.DiceHand.DieSides
  langs:
  - csharp
  - vb
  name: DiceHand
  nameWithType: DiceHand
  fullName: osrlib.Dice.DiceHand
  type: Class
  source:
    remote:
      path: src/osrlib.Core/Dice/DiceHand.cs
      branch: docgen
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: DiceHand
    path: ../src/osrlib.Core/Dice/DiceHand.cs
    startLine: 21
  assemblies:
  - osrlib.Core
  namespace: osrlib.Dice
  summary: "\nRepresents a &quot;handful of dice.&quot;\n"
  remarks: "\nThe DiceHand is a type representation of the well-known NdN format for a handful of\ndice. For example, &quot;1d20&quot;, &quot;3d6&quot;, or &quot;4d8.&quot; It is the preferred parameter for use in\nthe creation of a DiceRoll. Create a DiceHand, add it to a <xref href=\"osrlib.Dice.DiceRoll\" data-throw-if-not-resolved=\"false\"></xref>, then\ncall its <xref href=\"osrlib.Dice.DiceRoll.RollDice\" data-throw-if-not-resolved=\"false\"></xref> method to get the result.\n"
  example:
  - "\n<pre><code>// Roll one twenty-sided die\nDiceHand hand = new DiceHand(1, DieType.d20);\nDiceRoll roll = new DiceRoll(hand);\nint result = roll.RollDice();</code></pre>\n"
  syntax:
    content: public class DiceHand
    content.vb: Public Class DiceHand
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: osrlib.Dice.DiceHand.#ctor(System.Int32,DieType)
  commentId: M:osrlib.Dice.DiceHand.#ctor(System.Int32,DieType)
  id: '#ctor(System.Int32,DieType)'
  parent: osrlib.Dice.DiceHand
  langs:
  - csharp
  - vb
  name: DiceHand(Int32, DieType)
  nameWithType: DiceHand.DiceHand(Int32, DieType)
  fullName: osrlib.Dice.DiceHand.DiceHand(System.Int32, DieType)
  type: Constructor
  source:
    remote:
      path: src/osrlib.Core/Dice/DiceHand.cs
      branch: docgen
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: .ctor
    path: ../src/osrlib.Core/Dice/DiceHand.cs
    startLine: 28
  assemblies:
  - osrlib.Core
  namespace: osrlib.Dice
  summary: "\nCreates a new instance of DiceHand, appropriate for passing to the <xref href=\"osrlib.Dice.DiceRoll\" data-throw-if-not-resolved=\"false\"></xref> constructor.\n"
  example: []
  syntax:
    content: public DiceHand(int count, DieType sides)
    parameters:
    - id: count
      type: System.Int32
      description: The number of Dice in the DiceHand - the first value in the &apos;#d#&apos; format (the &apos;3&apos; in 3d6).
    - id: sides
      type: DieType
      description: The number of sides per Die in the DiceHand.
    content.vb: Public Sub New(count As Integer, sides As DieType)
  overload: osrlib.Dice.DiceHand.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: osrlib.Dice.DiceHand.DieCount
  commentId: P:osrlib.Dice.DiceHand.DieCount
  id: DieCount
  parent: osrlib.Dice.DiceHand
  langs:
  - csharp
  - vb
  name: DieCount
  nameWithType: DiceHand.DieCount
  fullName: osrlib.Dice.DiceHand.DieCount
  type: Property
  source:
    remote:
      path: src/osrlib.Core/Dice/DiceHand.cs
      branch: docgen
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: DieCount
    path: ../src/osrlib.Core/Dice/DiceHand.cs
    startLine: 46
  assemblies:
  - osrlib.Core
  namespace: osrlib.Dice
  summary: "\nGets or sets the number of dice in the DiceHand.\n"
  example: []
  syntax:
    content: public int DieCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property DieCount As Integer
  overload: osrlib.Dice.DiceHand.DieCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: osrlib.Dice.DiceHand.DieSides
  commentId: P:osrlib.Dice.DiceHand.DieSides
  id: DieSides
  parent: osrlib.Dice.DiceHand
  langs:
  - csharp
  - vb
  name: DieSides
  nameWithType: DiceHand.DieSides
  fullName: osrlib.Dice.DiceHand.DieSides
  type: Property
  source:
    remote:
      path: src/osrlib.Core/Dice/DiceHand.cs
      branch: docgen
      repo: git@github.com:mmacy/osrlib-dotnet.git
    id: DieSides
    path: ../src/osrlib.Core/Dice/DiceHand.cs
    startLine: 51
  assemblies:
  - osrlib.Core
  namespace: osrlib.Dice
  summary: "\nGets or sets the number of sides of each die in the DiceHand.\n"
  example: []
  syntax:
    content: public DieType DieSides { get; set; }
    parameters: []
    return:
      type: DieType
    content.vb: Public Property DieSides As DieType
  overload: osrlib.Dice.DiceHand.DieSides*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: osrlib.Dice.DiceRoll
  commentId: T:osrlib.Dice.DiceRoll
  parent: osrlib.Dice
  name: DiceRoll
  nameWithType: DiceRoll
  fullName: osrlib.Dice.DiceRoll
- uid: osrlib.Dice.DiceRoll.RollDice
  commentId: M:osrlib.Dice.DiceRoll.RollDice
  isExternal: true
- uid: osrlib.Dice
  commentId: N:osrlib.Dice
  name: osrlib.Dice
  nameWithType: osrlib.Dice
  fullName: osrlib.Dice
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: osrlib.Dice.DiceHand.#ctor*
  commentId: Overload:osrlib.Dice.DiceHand.#ctor
  name: DiceHand
  nameWithType: DiceHand.DiceHand
  fullName: osrlib.Dice.DiceHand.DiceHand
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DieType
  commentId: T:DieType
  name: DieType
  nameWithType: DieType
  fullName: DieType
- uid: osrlib.Dice.DiceHand.DieCount*
  commentId: Overload:osrlib.Dice.DiceHand.DieCount
  name: DieCount
  nameWithType: DiceHand.DieCount
  fullName: osrlib.Dice.DiceHand.DieCount
- uid: osrlib.Dice.DiceHand.DieSides*
  commentId: Overload:osrlib.Dice.DiceHand.DieSides
  name: DieSides
  nameWithType: DiceHand.DieSides
  fullName: osrlib.Dice.DiceHand.DieSides
